<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="6" total="10" passed="3" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-10-10T15:57:05Z" name="nopcommerce Regression Suite" finished-at="2023-10-10T15:59:12Z" duration-ms="126490">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:tests.ContactUsTest@6e43ddd6]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:tests.ProductHoverMenuTest@51d719bc]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:tests.SearchProductTest@2d38edfd]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:tests.UserRegistrationTestUsingJavaFaker@1507c3c3]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2023-10-10T15:57:05Z" name="Regression Test" finished-at="2023-10-10T15:59:12Z" duration-ms="126490">
      <class name="tests.UserRegistrationTestUsingJavaFaker">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:tests.UserRegistrationTestUsingJavaFaker@1507c3c3]" started-at="2023-10-10T15:57:10Z" name="setUpClass" finished-at="2023-10-10T15:57:10Z" duration-ms="10" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@22aefae0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="userCanRegisterSuccessfully()[pri:1, instance:tests.UserRegistrationTestUsingJavaFaker@1507c3c3]" started-at="2023-10-10T15:57:10Z" name="userCanRegisterSuccessfully" finished-at="2023-10-10T15:59:12Z" duration-ms="121916" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"css selector","selector":"a.ico-login"}
  (Session info: headless chrome=117.0.5938.134)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z'
System info: host: 'DESKTOP-VU5DHEC', ip: '192.168.1.21', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.8'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 117.0.5938.134, chrome: {chromedriverVersion: 116.0.5845.96 (1a3918166880..., userDataDir: C:\Users\EL-MAS~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:53441}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: d8ae04e82d00d43db6bd1783912d5eb7
*** Element info: {Using=css selector, value=a.ico-login}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":"a.ico-login"}
  (Session info: headless chrome=117.0.5938.134)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z'
System info: host: 'DESKTOP-VU5DHEC', ip: '192.168.1.21', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.8'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 117.0.5938.134, chrome: {chromedriverVersion: 116.0.5845.96 (1a3918166880..., userDataDir: C:\Users\EL-MAS~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:53441}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: d8ae04e82d00d43db6bd1783912d5eb7
*** Element info: {Using=css selector, value=a.ico-login}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByCssSelector(RemoteWebDriver.java:411)
at org.openqa.selenium.By$ByCssSelector.findElement(By.java:431)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy17.click(Unknown Source)
at pages.PageBase.clickButton(PageBase.java:26)
at pages.HomePage.openLoginPage(HomePage.java:48)
at tests.UserRegistrationTestUsingJavaFaker.userCanRegisterSuccessfully(UserRegistrationTestUsingJavaFaker.java:35)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:324)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:74)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:123)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:456)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:169)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:595)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:581)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userCanRegisterSuccessfully -->
        <test-method is-config="true" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:tests.UserRegistrationTestUsingJavaFaker@1507c3c3]" started-at="2023-10-10T15:59:12Z" name="screenshotOnFailure" finished-at="2023-10-10T15:59:12Z" duration-ms="301" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userCanRegisterSuccessfully status=FAILURE method=UserRegistrationTestUsingJavaFaker.userCanRegisterSuccessfully()[pri:1, instance:tests.UserRegistrationTestUsingJavaFaker@1507c3c3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:tests.UserRegistrationTestUsingJavaFaker@1507c3c3]" started-at="2023-10-10T15:59:12Z" name="tearDownClass" finished-at="2023-10-10T15:59:12Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- tests.UserRegistrationTestUsingJavaFaker -->
      <class name="tests.ProductHoverMenuTest">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:tests.ProductHoverMenuTest@51d719bc]" started-at="2023-10-10T15:57:07Z" name="setUpClass" finished-at="2023-10-10T15:57:07Z" duration-ms="13" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@22aefae0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="UserCanSelectSubCategoryFromMainMenu()[pri:0, instance:tests.ProductHoverMenuTest@51d719bc]" started-at="2023-10-10T15:57:07Z" name="UserCanSelectSubCategoryFromMainMenu" finished-at="2023-10-10T15:57:08Z" duration-ms="960" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UserCanSelectSubCategoryFromMainMenu -->
        <test-method is-config="true" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:tests.ProductHoverMenuTest@51d719bc]" started-at="2023-10-10T15:57:08Z" name="screenshotOnFailure" finished-at="2023-10-10T15:57:08Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=UserCanSelectSubCategoryFromMainMenu status=SUCCESS method=ProductHoverMenuTest.UserCanSelectSubCategoryFromMainMenu()[pri:0, instance:tests.ProductHoverMenuTest@51d719bc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:tests.ProductHoverMenuTest@51d719bc]" started-at="2023-10-10T15:57:08Z" name="tearDownClass" finished-at="2023-10-10T15:57:08Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- tests.ProductHoverMenuTest -->
      <class name="tests.SearchProductTest">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:tests.SearchProductTest@2d38edfd]" started-at="2023-10-10T15:57:08Z" name="setUpClass" finished-at="2023-10-10T15:57:08Z" duration-ms="11" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@22aefae0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="UserCanSearchForProducts()[pri:0, instance:tests.SearchProductTest@2d38edfd]" started-at="2023-10-10T15:57:08Z" name="UserCanSearchForProducts" finished-at="2023-10-10T15:57:10Z" duration-ms="1338" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UserCanSearchForProducts -->
        <test-method is-config="true" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:tests.SearchProductTest@2d38edfd]" started-at="2023-10-10T15:57:10Z" name="screenshotOnFailure" finished-at="2023-10-10T15:57:10Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=UserCanSearchForProducts status=SUCCESS method=SearchProductTest.UserCanSearchForProducts()[pri:0, instance:tests.SearchProductTest@2d38edfd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:tests.SearchProductTest@2d38edfd]" started-at="2023-10-10T15:57:10Z" name="tearDownClass" finished-at="2023-10-10T15:57:10Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- tests.SearchProductTest -->
      <class name="tests.ContactUsTest">
        <test-method is-config="true" signature="startDriver(java.lang.String)[pri:0, instance:tests.ContactUsTest@6e43ddd6]" started-at="2023-10-10T15:57:01Z" name="startDriver" finished-at="2023-10-10T15:57:05Z" duration-ms="4802" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome-headless]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startDriver -->
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:tests.ContactUsTest@6e43ddd6]" started-at="2023-10-10T15:57:05Z" name="setUpClass" finished-at="2023-10-10T15:57:06Z" duration-ms="250" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@22aefae0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="UserCanContactUs()[pri:0, instance:tests.ContactUsTest@6e43ddd6]" started-at="2023-10-10T15:57:06Z" name="UserCanContactUs" finished-at="2023-10-10T15:57:07Z" duration-ms="1645" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UserCanContactUs -->
        <test-method is-config="true" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:tests.ContactUsTest@6e43ddd6]" started-at="2023-10-10T15:57:07Z" name="screenshotOnFailure" finished-at="2023-10-10T15:57:07Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=UserCanContactUs status=SUCCESS method=ContactUsTest.UserCanContactUs()[pri:0, instance:tests.ContactUsTest@6e43ddd6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:tests.ContactUsTest@6e43ddd6]" started-at="2023-10-10T15:57:07Z" name="tearDownClass" finished-at="2023-10-10T15:57:07Z" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
        <test-method is-config="true" signature="stopDriver()[pri:0, instance:tests.ContactUsTest@6e43ddd6]" started-at="2023-10-10T15:59:12Z" name="stopDriver" finished-at="2023-10-10T15:59:12Z" duration-ms="581" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stopDriver -->
      </class> <!-- tests.ContactUsTest -->
    </test> <!-- Regression Test -->
  </suite> <!-- nopcommerce Regression Suite -->
</testng-results>
